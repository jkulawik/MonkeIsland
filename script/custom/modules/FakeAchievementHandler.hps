#include "interfaces/UserModule_Interface.hps"
#include "modules/ModuleInterfaces.hps"

#include "helpers/helper_imgui.hps"

//----------------------------------------------------------------------------------------

const float gfTotalStayTime = 5.0f;

const float gfEndYPos = 0.915f;
const float gfStartYPos = 1.0f;

//----------------------------------------------------------------------------------------

class cScrFakeAchievementHandler : iScrUserModule, iScrUserModule_Interface
{
    //////////////////////////////////////////////////////////////////////////////////////////
    // ==============
    // MAIN CALLBACKS
    // ==============
    //{///////////////////////////////////////////////////////////////////////////////////////
    
    //-------------------------------------------------------
    
    void Init()
	{		
		mbIsMoving = false;
		mbIsAchivementDisplayed = false;
		
		mfDisplayTimer = 0.0f;
		mfCurrentPos = 0.0f;
	}
	
	//-------------------------------------------------------
	
    void Update(float afTimeStep) {}
    void PostUpdate(float afTimeStep) {}
    void VariableUpdate(float afDeltaTime) {}
	
	//-------------------------------------------------------
	
    void Reset() 
	{
		msName = "";
	}
	
	//-------------------------------------------------------
	
    void OnDraw(float afFrameTime) {}
    void OnPostRender(float afFrameTime) {}
    void LoadUserConfig() {}
    void SaveUserConfig() {}
    void OnMapEnter(cLuxMap @apMap) {}
    void OnMapLeave(cLuxMap @apMap) {}
    void CreateWorldEntities(cLuxMap @apMap) {}
    void DestroyWorldEntities(cLuxMap @apMap) {}
    void PreloadData(cLuxMap @apMap) {}
    void OnEnterContainer(const tString&in asOldContainer) {}
    void OnLeaveContainer(const tString&in asNewContainer) {}
    void OnExitPressed() {}
    void OnAction(int alAction,  bool abPressed) {}
    void OnAnalogInput(int alAnalogId,  const cVector3f &in avAmount) {}
    void AppGotInputFocus() {}
    void AppLostInputFocus() {}
    
    //-------------------------------------------------------

	private void Unlock(const tString&in asName)
	{
		msName = asName;
		
		mbIsMoving = true;
		mbIsAchivementDisplayed = true;
	}

	//-------------------------------------------------------
    
    //} END MAIN CALLBACKS
    
    //////////////////////////////////////////////////////////////////////////////////////////
    // ================
    // GLOBAL FUNCTIONS
    // ================
    //{///////////////////////////////////////////////////////////////////////////////////////
    
    //-------------------------------------------------------
	
	void _Global_UnlockFakeAchievement()
	{
		Unlock(cScript_GetGlobalArgString(0));
	}
    
    //-------------------------------------------------------
    
    //} END GLOBAL FUNCTIONS
    
    //////////////////////////////////////////////////////////////////////////////////////////
    // =============
    // GUI CALLBACKS
    // =============
    //{///////////////////////////////////////////////////////////////////////////////////////
    
    //-------------------------------------------------------
    
    void OnGui(float afTimeStep)
	{
		if (!mbIsAchivementDisplayed) return;
		
		if (mbIsMoving)
		{
			mfCurrentPos = cMath_IncreaseTo(mfCurrentPos, afTimeStep, 1);
			if (mfCurrentPos == 1.0f) mbIsMoving = false;
		}
		else
		{
			if (mfDisplayTimer < gfTotalStayTime)
			{
				mfDisplayTimer = cMath_IncreaseTo(mfDisplayTimer, afTimeStep, gfTotalStayTime);
			}
			else
			{
				mfCurrentPos = cMath_IncreaseTo(mfCurrentPos, afTimeStep, 0);
				if (mfCurrentPos == 0)
				{
					mbIsMoving = false;
					mbIsAchivementDisplayed = false;
					
					mfDisplayTimer = 0.0f;
				}
			}
		}

		cVector3f vPos;
		vPos.x = -cLux_GetHudVirtualOffset().x;
		vPos.y = -cLux_GetHudVirtualOffset().y;
		vPos.z = 0.0f;
		
		ImGui_GroupBegin(vPos, ImGui_GetSize());
			cImGuiGfx frame = cImGuiGfx("achievement_frame_" + msName);
			cImGuiGfx thumbnail = cImGuiGfx("achievement_thumb_" + msName);
						
			float fY = cMath_Easing(eEasing_Linear, cMath_Min(mfCurrentPos - 0.5f, 0.2f) / 0.2f, gfStartYPos, gfEndYPos);

			ImGui_DrawGfx(frame, ImGui_NrmPosGroup(0.724f, fY, 15.0f), cVector2f(182.0f, 66.0f));
			ImGui_DrawGfx(thumbnail, ImGui_NrmPosGroup(0.729f, fY + 0.01f, 15.0f), cVector2f(51.5f, 51.5f));
		ImGui_GroupEnd();
	}
    
    //-------------------------------------------------------
    
    //} END GUI CALLBACKS
	
    //////////////////////////////////////////////////////////////////////////////////////////
    // ================
    // PROPERTIES
    // ================
    //{///////////////////////////////////////////////////////////////////////////////////////
    
    //-------------------------------------------------------
    
	[nosave] bool mbIsAchivementDisplayed;
	[nosave] bool mbIsMoving;
	[nosave] float mfCurrentPos;
	[nosave] float mfDisplayTimer;
				
	[nosave] tString msName;
	
    //-------------------------------------------------------
    
    //} END PROPERTIES
}
